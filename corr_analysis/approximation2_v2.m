% Гармонический анализ двойного прямоугольного импульса
%======================================================
clear
cla
hold on

%======================================================
%       Установка параметров расчёта
%======================================================

axis([-1 1 -4 2])  % видимые границы осей координат
t = [-1:0.02:1];   % пределы расчёта по оси абсцисс
N = 5;             % номер последнего члена ряда Фурье
T1 = 2;


% Задаём набор значений A. Для каждого значения А будет изображено два
% графика: s(t) и s1(t).

A = [0; -0.5; -1; -3];


% Задаём цвета линий для графиков s(t) и s1(t) при разных значениях А.
% Это должны быть векторы-столбцы, состоящие из строковых констант,
% указывающих цвета. При этом все эти строковые константы должны иметь
% одинаковую длину.
% Длина каждого из массивов может быть меньше, чем длина массива А.
% В этом случае после использования последнего элемента массива A_lcolor
% (или s1_lcolor) будет использован первый элемент, затем второй и т.д.
%
% Пример 1: A_lcolor = ['k'; 'b'; 'g'];
% В этом примере:
%     Первая линия s(t) (при А = 0) будет чёрная.
%     Вторая линия s(t) (при А = -0,5) будет синяя.
%     Третья линия s(t) (при А = -1) будет красная.
%     Четвёртая линия s(t) (при А = -3) будет зелёная.
%
% Пример 2: A_lcolor = 'b';
% В этом примере все линии s(t) будут синими.

A_lcolor  = ['k'; 'b'; 'r'; 'g'];
s1_lcolor = ['b'; 'r'];


% Задаём стили линий для графиков s(t) и s1(t) при разных значениях А.
% Это должны быть векторы-столбцы, состоящие из строковых констант,
% указывающих цвета. При этом все эти строковые константы должны иметь
% одинаковую длину.
% Длина каждого из массивов может быть меньше, чем длина массива А.
% В этом случае после использования последнего элемента массива A_lstyle
% (или s1_lstyle) будет использован первый элемент, затем второй и т.д.
%
% Пример: A_lstyle  = ['- '; '--'; '-.'];
% В этом примере:
%     Первая линия s(t) (при А = 0) будет сплошная. Обратите внимание
%         на необходимость пробела в первой строковой константе,
%         поскольку все элементы массива A_lstyle должны иметь равное
%         число символов.
%     Вторая линия s(t) (при А = -0,5) будет штриховая.
%     Третья линия s(t) (при А = -1) будет штрихпунктирная.
%     Четвёртая линия s(t) (при А = -3) будет сплошная, как и первая.

A_lstyle  = [' -'; '--'; '-.'];
s1_lstyle = ['--'; '- '];


% Задаём толщину линий для графиков s(t) и s1(t) при разных значениях А.
% Это должны быть векторы (не имеет значения, векторы-столбцы или
% векторы-строки), состоящие из числовых констант, указывающих толщину
% линий.
% Длина каждого из массивов может быть меньше, чем длина массива А.
% В этом случае после использования последнего элемента массива A_lwidth
% (или s1_lwidth) будет использован первый элемент, затем второй и т.д.
%
% Пример: A_lwidth  = [1 3];
% В этом примере:
%     Первая линия s(t) (при А = 0) будет иметь толщину 1 пиксел.
%     Вторая линия s(t) (при А = -0,5) будет иметь толщину 3 пиксела.
%     Третья линия s(t) (при А = -1) будет иметь толщину 1 пиксел,
%         как и первая.
%     Четвёртая линия s(t) (при А = -3) будет иметь толщину 3 пиксела,
%         как и вторая.

A_lwidth  = [1 3];
s1_lwidth = [2 3 4];
        

%=========================================================
%       Расчёт и построение графиков
%=========================================================

[A_lsl,i]=size(A_lstyle);    % длина массива A_lstyle
[s1_lsl,i]=size(s1_lstyle);  % длина массива s1_lstyle

for i=1:length(A)
    % Аппроксимация сигнала s(t) рядом Фурье
    s1 = (1+A(i))/2;    % вычисление первого члена ряда Фурье: a0/2
    for j=1:2:N         % номера членов ряда Фурье - нечётные, от 1 до N
        b = 2*(A(i)-1)/(j*pi);  % вычисление j-го коэффициента ряда Фурье
        s1 = s1 + b*sin(j*2*pi/T1*t);   % добавление j-го члена к сигналу s1(t)
    end
    
    % Построение графика функции s1(t)
    plot(t, s1,...
        'Color'    , A_lcolor(mod(i-1, length(A_lcolor)) + 1),...
        'LineStyle', A_lstyle(mod(i-1, A_lsl) + 1, :),...
        'LineWidth', A_lwidth(mod(i-1, length(A_lwidth)) + 1));
    % Построение графика функции s(t) при заданном значении A
    hL1 = line([0 1], [A(i) A(i)]);
    hL2 = line([-1 0], [1 1]);
    set(hL1,...
        'Color'    , s1_lcolor(mod(i-1, length(s1_lcolor)) + 1),...
        'LineStyle', s1_lstyle(mod(i-1, s1_lsl) + 1, :),...
        'LineWidth', s1_lwidth(mod(i-1, length(s1_lwidth)) + 1) );
    set(hL2,...
        'Color'    , s1_lcolor(mod(i-1, length(s1_lcolor)) + 1),...
        'LineStyle', s1_lstyle(mod(i-1, s1_lsl) + 1, :),...
        'LineWidth', s1_lwidth(mod(i-1, length(s1_lwidth)) + 1) );
end

%set(gca, 'GridLineStyle', '--');
set(gcf, 'color', [1 1 1]);
grid on
